import sys

# Configure which endpoint and which url the exploit uses. The default is to use the
# vulnerable endpoint for the local server. However you can set this to whatever you want.
LOCAL_SERVER_URL = "http://127.0.0.1:12301"
REMOTE_SERVER_URL = "https://api.appseccheat.codes"

use_vulnerable_endpoint = True
url_prefix = LOCAL_SERVER_URL


def get_cli_arguments() -> tuple[bool, str]:
    global use_vulnerable_endpoint
    global url_prefix

    opts = [opt for opt in sys.argv[1:] if opt.startswith("-")]
    message = "Overriding default: "

    if "-h" in opts:
        print(
            "Usage: python3 -m exploits [-p] [-v] [-r] [-l] [-c <url>]\n"
            "Options:\n"
            "  -p: Use patched endpoint\n"
            "  -v: Use vulnerable endpoint\n"
            "  -r: Use remote server\n"
            "  -l: Use local server\n"
            "  -c <url>: Use custom server"
        )
        sys.exit(0)

    if "-p" in opts:
        use_vulnerable_endpoint = False
        print(f"{message} using patched endpoint")
    elif "-v" in opts:
        use_vulnerable_endpoint = True
        print(f"{message} using vulnerable endpoint")

    if "-r" in opts:
        url_prefix = REMOTE_SERVER_URL
        print(f"{message} using remote server")
    elif "-l" in opts:
        url_prefix = LOCAL_SERVER_URL
        print(f"{message} using local server")
    elif "-c" in opts:
        try:
            custom_url_index = sys.argv.index("-c") + 1
            url_prefix = sys.argv[custom_url_index]
            if not url_prefix.startswith("http"):
                url_prefix = f"https://{url_prefix}"
        except (ValueError, IndexError):
            print("Error: -c flag requires a URL argument")
            sys.exit(1)
        print(f"{message} using custom server")

    return use_vulnerable_endpoint, url_prefix
